{"version":3,"sources":["components/form.js","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","className","placeholder","onChange","target","Todo","todo","index","remove","onClick","console","log","text","App","isCompleted","todos","setTodos","removeTodo","temp","splice","map","i","newTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA2BeA,EAtBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,EAAyBC,IAAMC,SAAS,IAAxC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACEJ,IACJH,EAAQG,GACRC,EAAS,IACV,EAGC,SACE,uBACEI,KAAK,OACLC,UAAU,QACVN,MAAOA,EACPO,YAAY,cACZC,SAAU,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOT,MAAtB,KAGlB,ECvBc,SAASU,EAAT,GAAmC,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,OAKvC,OAAO,sBAAKP,UAAU,OAAOQ,QAJ7B,WACEC,QAAQC,IAAI,QAAQJ,GACpBC,EAAOD,EACR,EACM,UACJD,EAAKM,KADD,SAGR,CCkCcC,MAtCf,WACE,MAA0BpB,IAAMC,SAAS,CACvC,CACEkB,KAAM,cACNE,aAAa,GAEf,CACEF,KAAM,wBACNE,aAAa,GAEf,CACEF,KAAM,iBACNE,aAAa,KAXjB,mBAAOC,EAAP,KAAcC,EAAd,KAmBMC,EAAa,SAAAV,GACjB,IAAIW,EAAI,YAAOH,GACfG,EAAKC,OAAOZ,EAAO,GACnBS,EAASE,EACV,EAED,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACGc,EAAMK,KAAI,SAACd,EAAMe,GAAP,OACT,cAAChB,EAAD,CAAcE,MAAOc,EAAGf,KAAMA,EAAME,OAAQS,GAAjCI,EADF,IAGX,cAAC,EAAD,CAAU7B,QAhBA,SAAAoB,GACd,IAAMU,EAAQ,sBAAOP,GAAP,CAAc,CAACH,OAAME,aAAY,KAC/CE,EAASM,EACV,QAiBF,EC9BcC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.c488a1d0.chunk.js","sourcesContent":["// user input - includes validation\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst TodoForm = ({addTodo}) => {\r\n  const [value,setValue] = React.useState('');\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(!value) return;\r\n    addTodo(value);\r\n    setValue('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={value}\r\n        placeholder=\"Add Todo...\"\r\n        onChange={e => setValue(e.target.value)} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React from 'react'\r\n\r\nexport default function Todo({todo,index,remove}){\r\n  function handle(){\r\n    console.log('Ping:',index);\r\n    remove(index);\r\n  }\r\n  return <div className=\"todo\" onClick={handle}>\r\n    {todo.text} (-)\r\n    </div>\r\n}\r\n","import React from 'react';\nimport './index.css';\nimport './App.css';\nimport TodoForm from \"./components/form\";\nimport Todo from \"./components/todo\";\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: 'learn react',\n      isCompleted: false,\n    },\n    {\n      text: 'meet friend for lunch',\n      isCompleted: false,\n    },\n    {\n      text: 'build todo app',\n      isCompleted: false,\n    }        \n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {text, isCompleted:false}];\n    setTodos(newTodos);\n  }\n  const removeTodo = index => {\n    let temp = [...todos];    \n    temp.splice(index, 1);\n    setTodos(temp);\n  }\n\n  return(\n    <div className=\"app\">\n      <div className=\"todo-list\" >\n        {todos.map((todo, i) => (\n          <Todo key={i} index={i} todo={todo} remove={removeTodo}/>\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}